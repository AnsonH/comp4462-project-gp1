{"version":3,"sources":["utils/index.js","utils/map.js","components/map/BubbleLegend.jsx","components/map/Map.jsx","components/wordcloud/Word_Cloud.jsx","components/demographics/Demographics.jsx","App.jsx","theme/muiTheme.js","index.js"],"names":["loadData","include","keys","i","length","includes","splice","massShootData","map","shooting","Object","fromEntries","entries","filter","key","getShootingByID","S_id","find","getPoliticalStance","year","parseInt","slice","lastElectYear","usElectionData","election","details","state","winner","getStanceColor","stance","BubbleLegend","props","width","height","fill","xmlns","cx","cy","r","d","stroke","strokeDasharray","LegendH3","styled","h3","YearRangeLegend","p","fullData","Map","yearRange","setYearRange","data","shootingData","range","filteredData","forEach","push","filterYear","pieChartData","democrat","republican","noData","id","label","value","color","getPieChartData","Card","variant","CardContent","Grid","container","spacing","item","xs","direction","style","MapContainer","center","zoom","minZoom","maxZoom","TileLayer","attribution","url","victims","CircleMarker","fillColor","fillOpacity","radius","Math","log","Tooltip","className","marginTop","justifyContent","Box","sx","Slider","min","max","onChange","event","newYearRange","valueLabelDisplay","alignItems","margin","top","right","bottom","left","innerRadius","colors","datum","sortByValue","enableArcLabels","enableArcLinkLabels","activeOuterRadiusOffset","layers","dataWithArc","centerX","centerY","total","x","y","textAnchor","dominantBaseline","fontSize","fontWeight","legends","anchor","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemTextColor","itemDirection","itemOpacity","symbolSize","symbolShape","Word_Cloud","addValue","txt","element","words","text","synonyms","Party","Restaurant","Home","Club","School","Street","Church","Mall","filterByVenue","Others","locations","counted","j","loc","toLowerCase","JSON","stringify","console","idx","paddingLeft","paddingTop","paddingBottom","marginBottom","minHeight","marginLeft","word","rotate","random","e","onWordClick","onWordMouseOver","onWordMouseOut","d3","remove","Demographics","gender_list","Gender","gender","_gender","freq","race_list","race","_race","age_classif","Age","NaN","split","age","Array","isArray","_age","chartType","loader","values","reduce","c","options","title","chartArea","isStacked","hAxis","vAxis","App","useState","muiTheme","createTheme","palette","primary","main","ReactDOM","render","StrictMode","ThemeProvider","theme","document","getElementById"],"mappings":"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","file":"static/js/main.6859d6fc.chunk.js","sourcesContent":["import massShootData from \"../data/mass_shootings.json\";\r\nimport usElectionData from \"../data/us_election.json\";\r\n\r\n/**\r\n * Filter mass shooting data by time range.\r\n * @param {object[]} shootingData Mass shooting data\r\n * @param {[number, number]} range Year range\r\n */\r\nexport function filterYear(shootingData, range = [1966, 2017]) {\r\n  const filteredData = [];\r\n  shootingData.forEach((shooting) => {\r\n    const year = parseInt(shooting[\"Date\"].slice(-4));\r\n    if (range[0] <= year && year <= range[1]) {\r\n      filteredData.push(shooting);\r\n    }\r\n  });\r\n\r\n  return filteredData;\r\n}\r\n\r\n/**\r\n * Load a copy of the mass shooting JSON data with specified keys being kept/discarded.\r\n * @param {boolean} include If `true`, returned objects only has keys specified in `keys` parameter.\r\n * If `false`, returned objects has all original keys except the ones specified in `keys` parameter.\r\n * @param  {...string} keys List of object keys to be kept/removed from mass shooting JSON\r\n */\r\nexport function loadData(include = true, ...keys) {\r\n  for (let i = 0; i < keys.length; ++i) {\r\n    if (!keys.includes(keys[i])) {\r\n      keys.splice(i, 1);\r\n      --i;\r\n    }\r\n  }\r\n  if (keys.length === 0) return massShootData;\r\n  return massShootData.map((shooting) =>\r\n    Object.fromEntries(\r\n      Object.entries(shooting).filter(([key, value]) =>\r\n        include ? keys.includes(key) : !keys.includes(key)\r\n      )\r\n    )\r\n  );\r\n}\r\n\r\n/**\r\n * Get an object of a single shooting incident given its ID.\r\n * @param {number} S_id Shooting incident ID. Corresponds to `S#` key in mass shooting JSON.\r\n */\r\nexport function getShootingByID(S_id) {\r\n  return massShootData.find((shooting) => shooting[\"S#\"] === S_id);\r\n}\r\n","import massShootData from \"../data/mass_shootings.json\";\r\nimport usElectionData from \"../data/us_election.json\";\r\nimport { getShootingByID } from \".\";\r\n\r\n/**\r\n * Get the data for drawing a pie chart showing political stance.\r\n * @param {object[]} data Shooting data\r\n * @see {@link https://nivo.rocks/pie/}\r\n */\r\nexport function getPieChartData(data) {\r\n  let democrat = 0,\r\n    republican = 0,\r\n    noData = 0;\r\n\r\n  data.forEach((shooting) => {\r\n    const S_id = shooting[\"S#\"];\r\n    const stance = getPoliticalStance(S_id);\r\n    switch (stance) {\r\n      case \"DEMOCRAT\":\r\n        ++democrat;\r\n        break;\r\n      case \"REPUBLICAN\":\r\n        ++republican;\r\n        break;\r\n      default:\r\n        ++noData;\r\n        break;\r\n    }\r\n  });\r\n\r\n  return [\r\n    {\r\n      id: \"Democrat\",\r\n      label: \"Democrat\",\r\n      value: democrat,\r\n      color: \"#002387\",\r\n    },\r\n    {\r\n      id: \"Republican\",\r\n      label: \"Republican\",\r\n      value: republican,\r\n      color: \"#cc0000\",\r\n    },\r\n    {\r\n      id: \"No Data\",\r\n      label: \"No Data\",\r\n      value: noData,\r\n      color: \"#515151\",\r\n    },\r\n  ];\r\n}\r\n\r\n/**\r\n * Get the winning party of the state in the election as closest to the shooting incident given its ID.\r\n * @param {number} S_id Shooting incident ID\r\n * @returns {\"DEMOCRAT\"|\"REPUBLICAN\"|null}\r\n */\r\nexport function getPoliticalStance(S_id) {\r\n  const shooting = getShootingByID(S_id);\r\n  const year = parseInt(shooting[\"Date\"].slice(-4));\r\n  const lastElectYear = year - (year % 4);\r\n\r\n  // No election results before 1976\r\n  if (lastElectYear < 1976) {\r\n    return null;\r\n  }\r\n\r\n  const election = usElectionData.find((election) => election.year === lastElectYear);\r\n  const state = election.details.find((state) => state.state === shooting[\"State\"]);\r\n  return state.winner;\r\n}\r\n\r\n/**\r\n * Gets the color of the winning party in a state.\r\n * @param {\"DEMOCRAT\"|\"REPUBLICAN\"|null} stance Winning party of election\r\n * @returns\r\n */\r\nexport function getStanceColor(stance) {\r\n  switch (stance) {\r\n    case \"DEMOCRAT\":\r\n      return \"#002387\";\r\n    case \"REPUBLICAN\":\r\n      return \"#cc0000\";\r\n    default:\r\n      return \"#515151\";\r\n  }\r\n}\r\n","export default function BubbleLegend(props) {\r\n  return (\r\n    <svg width={92} height={50} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\r\n      <circle cx={25} cy={25} r={25} fill=\"#335E89\" />\r\n      <circle cx={25} cy={34} r={16} fill=\"#6F9CC9\" />\r\n      <circle cx={25} cy={42} r={8} fill=\"#CEE0F1\" />\r\n      <path d=\"M33 42h35M40 26h28\" stroke=\"#000\" strokeDasharray=\"2 2\" />\r\n      <path\r\n        d=\"M77.678 43.434c0 .41-.07.78-.211 1.113-.14.332-.342.617-.604.855-.257.239-.57.422-.937.551a3.678 3.678 0 01-1.225.194c-.781 0-1.361-.118-1.74-.352v-1.02c.57.368 1.154.551 1.752.551.305 0 .578-.045.82-.135.246-.09.455-.214.627-.375.172-.16.303-.353.393-.58.094-.226.14-.474.14-.744 0-.547-.183-.974-.55-1.283-.368-.313-.9-.469-1.6-.469a11.491 11.491 0 00-.733.024c-.124.004-.248.01-.369.017a6.28 6.28 0 00-.322.03l.287-4.213h3.885v.867h-3.053l-.17 2.467c.125-.008.258-.014.399-.018a6.76 6.76 0 01.375-.012c.445 0 .844.059 1.195.176.352.117.648.285.89.504.247.215.432.48.557.797.13.312.194.664.194 1.055zM76.523 23.8c0-.257-.04-.482-.123-.673a1.26 1.26 0 00-.328-.475 1.297 1.297 0 00-.486-.287 2.015 2.015 0 00-1.16-.018 2.75 2.75 0 00-.528.212c-.167.09-.332.197-.492.322a3.67 3.67 0 00-.44.416v-1.031c.27-.262.571-.461.903-.598.336-.14.744-.211 1.225-.211.344 0 .662.05.955.152.293.098.547.243.761.434.215.191.383.428.504.709.126.281.188.604.188.967 0 .332-.04.633-.117.902-.075.27-.19.524-.346.762a3.586 3.586 0 01-.58.685 8.26 8.26 0 01-.826.668c-.395.282-.72.522-.979.721-.254.2-.457.387-.61.563a1.653 1.653 0 00-.316.521 1.852 1.852 0 00-.087.598h4.183V30H72.64v-.416c0-.36.039-.676.117-.95.078-.273.207-.532.387-.779.18-.246.414-.492.703-.738.293-.246.65-.523 1.072-.832a6.54 6.54 0 00.762-.627c.207-.199.373-.398.498-.598.125-.199.213-.4.263-.603a2.56 2.56 0 00.082-.656zm8.075 3.634c0 .41-.07.78-.21 1.113-.142.332-.343.617-.605.855-.257.239-.57.422-.937.551a3.678 3.678 0 01-1.225.194c-.78 0-1.36-.118-1.74-.352v-1.02c.57.368 1.154.551 1.752.551.305 0 .578-.045.82-.135.247-.09.456-.214.627-.375.172-.16.303-.353.393-.58.094-.226.14-.474.14-.744 0-.547-.183-.974-.55-1.283-.367-.313-.9-.469-1.6-.469a11.485 11.485 0 00-.732.024c-.125.004-.248.01-.37.017a6.28 6.28 0 00-.322.03l.287-4.213h3.885v.867H81.16l-.17 2.467c.125-.008.257-.014.398-.018a6.76 6.76 0 01.375-.012c.445 0 .844.059 1.195.176.352.117.649.285.891.504.246.215.432.48.557.797.129.312.193.664.193 1.055zM75.242 13h-.96V5.74c-.075.074-.184.16-.329.258-.14.094-.3.188-.48.281a6.263 6.263 0 01-.563.264 3.979 3.979 0 01-.574.193v-.972c.21-.059.433-.137.668-.235a8.795 8.795 0 001.348-.72c.203-.137.379-.27.527-.399h.363V13zm7.202-6.2a1.7 1.7 0 00-.123-.673 1.26 1.26 0 00-.328-.475 1.296 1.296 0 00-.487-.287 2.016 2.016 0 00-1.16-.018c-.18.051-.355.122-.527.212-.168.09-.332.197-.493.322a3.675 3.675 0 00-.439.416V5.266c.27-.262.57-.461.902-.598.336-.14.745-.211 1.225-.211.344 0 .662.05.955.152.293.098.547.243.762.434.215.191.383.428.504.709.125.281.187.603.187.967 0 .332-.039.633-.117.902-.074.27-.19.524-.346.762a3.581 3.581 0 01-.58.685c-.234.22-.51.442-.826.668-.394.282-.72.522-.978.721-.254.2-.457.387-.61.563a1.652 1.652 0 00-.316.521 1.852 1.852 0 00-.088.598h4.183V13H78.56v-.416c0-.36.039-.676.117-.95.078-.273.207-.532.387-.779.18-.246.414-.492.703-.738.293-.246.65-.523 1.072-.832.305-.219.559-.428.762-.627.207-.199.373-.398.498-.597.125-.2.213-.4.264-.604.054-.207.082-.426.082-.656zm8.074 3.634c0 .41-.07.78-.21 1.113-.141.332-.343.617-.604.855-.258.239-.57.422-.938.551a3.678 3.678 0 01-1.224.194c-.782 0-1.362-.118-1.74-.352v-1.02c.57.368 1.154.551 1.751.551.305 0 .579-.045.82-.135.247-.09.456-.214.628-.375.171-.16.302-.353.392-.58.094-.226.14-.474.14-.744 0-.547-.183-.974-.55-1.283-.367-.313-.9-.469-1.6-.469a11.48 11.48 0 00-.732.024c-.125.004-.248.01-.37.017a6.144 6.144 0 00-.321.03l.287-4.213h3.885v.867h-3.053l-.17 2.467c.125-.008.258-.014.398-.018.14-.008.266-.012.375-.012.446 0 .844.059 1.196.176.351.117.648.285.89.504.246.215.432.48.557.797.129.312.193.664.193 1.055z\"\r\n        fill=\"#000\"\r\n      />\r\n      <path d=\"M45 9h23\" stroke=\"#000\" strokeDasharray=\"2 2\" />\r\n    </svg>\r\n  );\r\n}\r\n","import styled from \"@emotion/styled\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { ResponsivePie } from \"@nivo/pie\";\r\nimport { CircleMarker, MapContainer, TileLayer, Tooltip } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { filterYear, loadData } from \"../../utils\";\r\nimport { getPieChartData, getPoliticalStance, getStanceColor } from \"../../utils/map\";\r\nimport BubbleLegend from \"./BubbleLegend\";\r\n\r\nconst LegendH3 = styled.h3`\r\n  text-align: center;\r\n  margin: 0;\r\n`;\r\n\r\nconst YearRangeLegend = styled.p`\r\n  font-size: 16px;\r\n  margin: 0 10px 0 0;\r\n`;\r\n\r\nconst fullData = loadData();\r\n\r\nexport default function Map({ yearRange, setYearRange }) {\r\n  const data = filterYear(fullData, yearRange);\r\n  const pieChartData = getPieChartData(data);\r\n\r\n  const PieChartCenterText = ({ dataWithArc, centerX, centerY }) => {\r\n    let total = 0;\r\n    dataWithArc.forEach((datum) => {\r\n      total += datum.value;\r\n    });\r\n\r\n    return (\r\n      <text\r\n        x={centerX}\r\n        y={centerY}\r\n        textAnchor=\"middle\"\r\n        dominantBaseline=\"central\"\r\n        style={{\r\n          fontSize: \"20px\",\r\n          fontWeight: 600,\r\n        }}\r\n      >\r\n        {total}\r\n      </text>\r\n    );\r\n  };\r\n\r\n  const handleSliderChange = (event, newYearRange) => {\r\n    setYearRange(newYearRange);\r\n  };\r\n\r\n  return (\r\n    <Card variant=\"outlined\">\r\n      <CardContent>\r\n        <h2>Locations</h2>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={9} container direction=\"column\">\r\n            <Grid item style={{ height: 350 }}>\r\n              <MapContainer\r\n                style={{ height: 350 }}\r\n                center={[38, -98]}\r\n                zoom={4}\r\n                minZoom={3}\r\n                maxZoom={12}\r\n              >\r\n                <TileLayer\r\n                  attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                  url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n                {data.map((shooting) => {\r\n                  const S_id = shooting[\"S#\"];\r\n                  const stance = getPoliticalStance(S_id);\r\n                  const victims = shooting[\"Total victims\"];\r\n                  return (\r\n                    <CircleMarker\r\n                      key={S_id}\r\n                      center={shooting[\"Coordinates\"]}\r\n                      stroke={false}\r\n                      fillColor={getStanceColor(stance)}\r\n                      fillOpacity={0.5}\r\n                      radius={5 * Math.log(victims)}\r\n                    >\r\n                      <Tooltip>\r\n                        <div className=\"map-tooltip\">\r\n                          <strong>{shooting[\"Title\"]}</strong>\r\n                          <p>Date: {shooting[\"Date\"]}</p>\r\n                          <p>Total victims: {shooting[\"Total victims\"]}</p>\r\n                          <p>\r\n                            Fatalities: {shooting[\"Fatalities\"]} ; Injured:{\" \"}\r\n                            {shooting[\"Injured\"]}\r\n                          </p>\r\n                        </div>\r\n                      </Tooltip>\r\n                    </CircleMarker>\r\n                  );\r\n                })}\r\n              </MapContainer>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              style={{ marginTop: 30 }}\r\n              container\r\n              direction=\"row\"\r\n              justifyContent=\"center\"\r\n              spacing={3}\r\n            >\r\n              <Grid item>\r\n                <YearRangeLegend>Year Range:</YearRangeLegend>\r\n              </Grid>\r\n              <Grid item>\r\n                <Box sx={{ width: 300 }}>\r\n                  <Slider\r\n                    min={1966}\r\n                    max={2017}\r\n                    value={yearRange}\r\n                    onChange={handleSliderChange}\r\n                    valueLabelDisplay=\"on\"\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={3} container direction=\"column\" alignItems=\"center\" spacing={3}>\r\n            <Grid item style={{ height: 220 }}>\r\n              <LegendH3>Political Stance</LegendH3>\r\n              <ResponsivePie\r\n                data={pieChartData}\r\n                margin={{ top: 0, right: 20, bottom: 60, left: 20 }}\r\n                innerRadius={0.5}\r\n                colors={{ datum: \"data.color\" }}\r\n                sortByValue\r\n                enableArcLabels={false}\r\n                enableArcLinkLabels={false}\r\n                activeOuterRadiusOffset={2}\r\n                layers={[\"arcs\", \"arcLabels\", \"legends\", PieChartCenterText]}\r\n                legends={[\r\n                  {\r\n                    anchor: \"bottom\",\r\n                    direction: \"column\",\r\n                    justify: false,\r\n                    translateX: 0,\r\n                    translateY: 50,\r\n                    itemsSpacing: 0,\r\n                    itemWidth: 100,\r\n                    itemHeight: 18,\r\n                    itemTextColor: \"#000\",\r\n                    itemDirection: \"left-to-right\",\r\n                    itemOpacity: 1,\r\n                    symbolSize: 15,\r\n                    symbolShape: \"circle\",\r\n                  },\r\n                ]}\r\n              />\r\n            </Grid>\r\n            <Grid item style={{ marginTop: 30 }}>\r\n              <LegendH3>Total Victims</LegendH3>\r\n              <BubbleLegend style={{ marginTop: 15 }} />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import { Card } from \"@mui/material\";\r\nimport * as d3 from \"d3\";\r\nimport WordCloud from \"react-d3-cloud\";\r\nimport { loadData, getShootingByID } from \"../../utils\";\r\n\r\nexport default function Word_Cloud(props) {\r\n  function handleMouseClick(d) {}\r\n\r\n  // function handleMouseOver(d) {\r\n  //   var group = focus.append('g')\r\n  //                    .attr('id', 'story-titles');\r\n  //    var base = d.y - d.size;\r\n\r\n  //   d3.selectAll('text')\r\n  //        .data(data['sample_title'][d.key])\r\n  //        .enter().append('text')\r\n  //        .attr('x', d.x)\r\n  //        .attr('y', function(title, i) {\r\n  //          return (base - i*14);\r\n  //        })\r\n  //        .attr('text-anchor', 'middle')\r\n  //        .text(function(title) { return title; });\r\n\r\n  //   var bbox = group.node().getBBox();\r\n  //   var bboxPadding = 5;\r\n\r\n  //   // place a white background to see text more clearly\r\n  //   var rect = group.insert('rect', ':first-child')\r\n  //                 .attr('x', bbox.x)\r\n  //                 .attr('y', bbox.y)\r\n  //                 .attr('width', bbox.width + bboxPadding)\r\n  //                 .attr('height', bbox.height + bboxPadding)\r\n  //                 .attr('rx', 10)\r\n  //                 .attr('ry', 10)\r\n  //                 .attr('class', 'label-background-strong');\r\n  // }\r\n\r\n  function handleMouseOut(d) {\r\n    d3.select(\"#story-titles\").remove();\r\n  }\r\n\r\n  function addValue(txt) {\r\n    const element = words.find((item) => item.text === txt);\r\n    element.value = element.value + 1;\r\n  }\r\n\r\n  const synonyms = {\r\n    Party: [\"party\"],\r\n    Restaurant: [\"restaurant\", \"cafeteria\", \"cafe\", \"coffee shop\"],\r\n    Home: [\r\n      \"home\",\r\n      \"house\",\r\n      \"family\",\r\n      \"mother\",\r\n      \"father\",\r\n      \"child\",\r\n      \"son\",\r\n      \"daughter\",\r\n      \"apartment\",\r\n    ],\r\n    \"Drive-by\": [\"drive-by\", \"drive by\"],\r\n    Club: [\"club\", \"bar\", \"pub\"],\r\n    School: [\"school\", \"teacher\", \"student\", \"university\", \"college\"],\r\n    Street: [\"street\", \"sidewalk\", \"roadside\"],\r\n    \"Gas station\": [\"gas station\"],\r\n    \"Post office\": [\"post office\"],\r\n    Church: [\"church\", \"temple\", \"mosque\"],\r\n    Mall: [\"mall\", \"shopping\", \"macy's\", \"plaza\"],\r\n    \"Public facilities\": [\r\n      \"public facilities\",\r\n      \"city hall\",\r\n      \"army\",\r\n      \"government\",\r\n      \"township\",\r\n      \"navy\",\r\n      \"train\",\r\n      \"airport\",\r\n    ],\r\n  };\r\n\r\n  const words = [\r\n    { text: \"Party\", value: 0 },\r\n    { text: \"Restaurant\", value: 0 },\r\n    { text: \"Home\", value: 0 },\r\n    { text: \"Drive-by\", value: 0 },\r\n    { text: \"Club\", value: 0 },\r\n    { text: \"School\", value: 0 },\r\n    { text: \"Street\", value: 0 },\r\n    { text: \"Gas station\", value: 0 },\r\n    { text: \"Post office\", value: 0 },\r\n    { text: \"Church\", value: 0 },\r\n    { text: \"Mall\", value: 0 },\r\n    { text: \"Public facilities\", value: 0 },\r\n    { text: \"Others\", value: 0 },\r\n  ];\r\n\r\n  const filterByVenue = {\r\n    Party: [],\r\n    Restaurant: [],\r\n    Home: [],\r\n    \"Drive-by\": [],\r\n    Club: [],\r\n    School: [],\r\n    Street: [],\r\n    \"Gas station\": [],\r\n    \"Post office\": [],\r\n    Church: [],\r\n    Mall: [],\r\n    \"Public facilities\": [],\r\n    Others: [],\r\n  };\r\n\r\n  // calculate word cloud text size\r\n  const data = loadData(true, \"S#\", \"Title\", \"Incident Area\", \"Summary\", \"NER\");\r\n  const locations = Object.keys(synonyms);\r\n  for (let i in data) {\r\n    let counted = false;\r\n    const shooting = data[i];\r\n    for (let j in locations) {\r\n      const loc = locations[j];\r\n      if (\r\n        synonyms[loc]\r\n          .map((item) => shooting[\"Title\"].toLowerCase().includes(item))\r\n          .includes(true) ||\r\n        synonyms[loc]\r\n          .map((item) =>\r\n            shooting[\"Incident Area\"]\r\n              ? shooting[\"Incident Area\"].toLowerCase().includes(item)\r\n              : false\r\n          )\r\n          .includes(true) ||\r\n        synonyms[loc]\r\n          .map((item) => shooting[\"Summary\"].toLowerCase().includes(item))\r\n          .includes(true) ||\r\n        synonyms[loc]\r\n          .map((item) =>\r\n            shooting[\"NER\"]\r\n              ? JSON.stringify(shooting[\"NER\"]).toLowerCase().includes(item)\r\n              : false\r\n          )\r\n          .includes(true)\r\n      ) {\r\n        addValue(loc);\r\n        counted = true;\r\n        filterByVenue[loc].push(shooting[\"S#\"]);\r\n      }\r\n    }\r\n    if (!counted) {\r\n      addValue(\"Others\");\r\n      filterByVenue[\"Others\"].push(shooting[\"S#\"]);\r\n      continue;\r\n    }\r\n  }\r\n\r\n  console.log(filterByVenue[\"Others\"].map((idx) => getShootingByID(idx)[\"Title\"]));\r\n\r\n  return (\r\n    <Card style={props.style} variant=\"outlined\">\r\n      <h2\r\n        style={{\r\n          paddingLeft: 15,\r\n          paddingTop: 10,\r\n          paddingBottom: 10,\r\n          marginTop: 0,\r\n          marginBottom: 0,\r\n        }}\r\n      >\r\n        Word Cloud\r\n      </h2>\r\n      <div\r\n        style={{\r\n          minHeight: 280,\r\n          marginTop: -120,\r\n          marginLeft: -350,\r\n        }}\r\n      >\r\n        <WordCloud\r\n          data={words}\r\n          width={550}\r\n          height={180}\r\n          fontSize={(word) => word.value * 0.26 + 5}\r\n          rotate={0}\r\n          random={(e) => 1}\r\n          onWordClick={(event, d) => {\r\n            // set global state\r\n            console.log(`onWordClick: ${d.text}`);\r\n            handleMouseClick(d);\r\n          }}\r\n          onWordMouseOver={(event, d) => {\r\n            // display number\r\n            console.log(`onWordMouseOver: ${d.text}, ${d.value}`);\r\n            // handleMouseOver(d);\r\n          }}\r\n          onWordMouseOut={(event, d) => {\r\n            handleMouseOut(d);\r\n          }}\r\n        />\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n","import Card from \"@mui/material/Card\";\r\nimport { CardContent } from \"@mui/material\";\r\nimport { loadData } from \"../../utils\";\r\n// import { ResponsiveBar } from \"@nivo/bar\";\r\nimport { Chart } from \"react-google-charts\";\r\n// import { Bar } from \"react-chartjs-2\";\r\n\r\nexport default function Demographics(props) {\r\n  const data = loadData(true, \"S#\", \"Gender\", \"Race_encoded\", \"Age\");\r\n\r\n  // compute percentage of gender, race, and frequency of age of shooter\r\n  const gender_list = data.map((item) => item.Gender).filter((item) => item !== null);\r\n  const gender = {};\r\n  for (let i = 0; i < gender_list.length; i++) {\r\n    gender[gender_list[i]] = 1 + (gender[gender_list[i]] || 0);\r\n  }\r\n  gender[\"Male\"] += gender[\"M\"];\r\n  delete gender[\"M\"];\r\n  gender[\"Male\"] += gender[\"Male/Female\"];\r\n  gender[\"Female\"] += gender[\"Male/Female\"];\r\n  delete gender[\"Male/Female\"];\r\n  const _gender = [];\r\n  for (let [key, value] of Object.entries(gender)) {\r\n    _gender.push({ gender: key, freq: value });\r\n  }\r\n  console.log(_gender);\r\n\r\n  const race_list = data\r\n    .map((item) => item[\"Race_encoded\"])\r\n    .filter((item) => item !== null);\r\n  const race = {};\r\n  for (let i = 0; i < race_list.length; i++) {\r\n    race[race_list[i]] = 1 + (race[race_list[i]] || 0);\r\n  }\r\n  const _race = [];\r\n  for (let [key, value] of Object.entries(race)) {\r\n    _race.push({ race: key, freq: value });\r\n  }\r\n  console.log(_race);\r\n\r\n  const age_list = data\r\n    .map((item) => item.Age)\r\n    .filter((item) => item !== null && item !== NaN);\r\n  let age_classif = age_list.map((item) => (item.includes(\",\") ? item.split(\",\") : item));\r\n  const age = {};\r\n  for (let i = 0; i < age_classif.length; i++) {\r\n    const a = Array.isArray(age_classif[i]) ? age_classif[i] : [age_classif[i]];\r\n    a.forEach((element) => {\r\n      age[element - (element % 5)] = 1 + (age[element - (element % 5)] || 0);\r\n    });\r\n  }\r\n  const _age = [];\r\n  for (let [key, value] of Object.entries(age)) {\r\n    _age.push({ age: key, freq: value });\r\n  }\r\n  console.log(_age);\r\n\r\n  return (\r\n    <Card style={props.style} variant=\"outlined\">\r\n      <h2\r\n        style={{\r\n          paddingLeft: 15,\r\n          paddingTop: 10,\r\n          paddingBottom: 10,\r\n          marginTop: 0,\r\n          marginBottom: 0,\r\n        }}\r\n      >\r\n        Demographics\r\n      </h2>\r\n      <div\r\n        style={{\r\n          minHeight: 300,\r\n        }}\r\n      >\r\n        <CardContent style={{ height: 100, width: 150 }}>\r\n          gender\r\n          <Chart\r\n            width={\"300px\"}\r\n            height={\"50px\"}\r\n            chartType=\"BarChart\"\r\n            loader={<div>Loading Gender Chart</div>}\r\n            data={[\r\n              [\"\", ...Object.keys(gender)],\r\n              [\r\n                \"\",\r\n                ...Object.values(gender).map(\r\n                  (item) => item / Object.values(gender).reduce((p, c) => p + c)\r\n                ),\r\n              ],\r\n            ]}\r\n            options={{\r\n              title: null,\r\n              chartArea: { width: \"100%\", height: \"20%\" },\r\n              isStacked: true,\r\n              hAxis: null,\r\n              // {\r\n              //   title: 'Total Population',\r\n              //   minValue: 0,\r\n              // },\r\n              vAxis: null,\r\n              //  {\r\n              //   title: 'City',\r\n              // },\r\n            }}\r\n            // For tests\r\n            // rootProps={{ 'data-testid': '3' }}\r\n          />\r\n          race\r\n          <Chart\r\n            width={\"300px\"}\r\n            height={\"50px\"}\r\n            chartType=\"BarChart\"\r\n            loader={<div>Loading Race Chart</div>}\r\n            data={[\r\n              [\"\", ...Object.keys(race)],\r\n              [\r\n                \"\",\r\n                ...Object.values(race).map(\r\n                  (item) => item / Object.values(race).reduce((p, c) => p + c)\r\n                ),\r\n              ],\r\n            ]}\r\n            options={{\r\n              title: null,\r\n              chartArea: { width: \"100%\", height: \"20%\" },\r\n              isStacked: true,\r\n              hAxis: null,\r\n              // {\r\n              //   title: 'Total Population',\r\n              //   minValue: 0,\r\n              // },\r\n              vAxis: null,\r\n              //  {\r\n              //   title: 'City',\r\n              // },\r\n            }}\r\n            // For tests\r\n            // rootProps={{ 'data-testid': '3' }}\r\n          />\r\n        </CardContent>\r\n        <CardContent style={{ height: 140, width: 150 }}>\r\n          age\r\n          {/* <ResponsiveBar\r\n            data={age}\r\n            keys={[ 'hot dog', 'burger', 'sandwich', 'kebab', 'fries', 'donut' ]}\r\n            indexBy=\"country\"\r\n            margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n            padding={0.3}\r\n            valueScale={{ type: 'linear' }}\r\n            indexScale={{ type: 'band', round: true }}\r\n            colors={{ scheme: 'nivo' }}\r\n            defs={[\r\n                {\r\n                    id: 'dots',\r\n                    type: 'patternDots',\r\n                    background: 'inherit',\r\n                    color: '#38bcb2',\r\n                    size: 4,\r\n                    padding: 1,\r\n                    stagger: true\r\n                },\r\n                {\r\n                    id: 'lines',\r\n                    type: 'patternLines',\r\n                    background: 'inherit',\r\n                    color: '#eed312',\r\n                    rotation: -45,\r\n                    lineWidth: 6,\r\n                    spacing: 10\r\n                }\r\n            ]}\r\n            fill={[\r\n                {\r\n                    match: {\r\n                        id: 'fries'\r\n                    },\r\n                    id: 'dots'\r\n                },\r\n                {\r\n                    match: {\r\n                        id: 'sandwich'\r\n                    },\r\n                    id: 'lines'\r\n                }\r\n            ]}\r\n            borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n            axisTop={null}\r\n            axisRight={null}\r\n            axisBottom={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: 'country',\r\n                legendPosition: 'middle',\r\n                legendOffset: 32\r\n            }}\r\n            axisLeft={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: 'food',\r\n                legendPosition: 'middle',\r\n                legendOffset: -40\r\n            }}\r\n            labelSkipWidth={12}\r\n            labelSkipHeight={12}\r\n            labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n            legends={[\r\n                {\r\n                    dataFrom: 'keys',\r\n                    anchor: 'bottom-right',\r\n                    direction: 'column',\r\n                    justify: false,\r\n                    translateX: 120,\r\n                    translateY: 0,\r\n                    itemsSpacing: 2,\r\n                    itemWidth: 100,\r\n                    itemHeight: 20,\r\n                    itemDirection: 'left-to-right',\r\n                    itemOpacity: 0.85,\r\n                    symbolSize: 20,\r\n                    effects: [\r\n                        {\r\n                            on: 'hover',\r\n                            style: {\r\n                                itemOpacity: 1\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]}\r\n            role=\"application\"\r\n            ariaLabel=\"Nivo bar chart demo\"\r\n            barAriaLabel={function(e){return e.id+\": \"+e.formattedValue+\" in country: \"+e.indexValue}}\r\n          /> */}\r\n        </CardContent>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Map from \"./components/map/Map\";\r\nimport Word_Cloud from \"./components/wordcloud/Word_Cloud\";\r\nimport Demographics from \"./components/demographics/Demographics\";\r\n\r\nfunction App() {\r\n  const [yearRange, setYearRange] = useState([1966, 2017]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>US Mass Shooting Overview</h1>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={7} container direction=\"column\" spacing={2}>\r\n          <Grid item>\r\n            <Map yearRange={yearRange} setYearRange={setYearRange} />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={5} container direction=\"column\" spacing={2}>\r\n          <Grid item>\r\n            <Word_Cloud yearRange={yearRange} style={{ height: \"100%\" }} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Demographics yearRange={yearRange} style={{ height: \"100%\" }} />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createTheme } from \"@mui/material/styles\";\r\n\r\n// See https://mui.com/customization/theming/\r\n\r\nconst muiTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#850D0D\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default muiTheme;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { ThemeProvider } from \"@mui/material/styles\";\r\nimport muiTheme from \"./theme/muiTheme\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={muiTheme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}