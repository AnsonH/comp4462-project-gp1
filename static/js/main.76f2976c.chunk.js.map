{"version":3,"sources":["components/dropdownmenu/DropdownMenu.jsx","utils/index.js","utils/usMap.js","components/map/BubbleLegend.jsx","components/map/Map.jsx","components/wordcloud/WordCloudLegend.jsx","components/wordcloud/Word_Cloud.jsx","utils/demographics.js","components/demographics/Demographics2.jsx","components/parallelcoordinate/ParallelCoordinate.jsx","components/timerange/Time_Range.jsx","App.jsx","theme/muiTheme.js","index.js"],"names":["states","YearRangeLegend","styled","p","DropdownMenu","props","Box","sx","flexGrow","AppBar","position","style","height","justifyContent","Toolbar","Typography","variant","noWrap","component","width","flexDirection","paddingTop","Slider","min","max","value","yearRange","onChange","event","newYearRange","setYearRange","valueLabelDisplay","color","alignContent","alignSelf","paddingLeft","paddingRight","FormControl","InputLabel","Select","usState","label","e","setUsState","target","MenuItem","map","state","toUpperCase","Button","onClick","filterYearsState","shootingData","range","filteredData","forEach","shooting","year","parseInt","slice","State","includes","push","loadData","include","keys","i","length","splice","massShootData","Object","fromEntries","entries","filter","key","getShootingByID","S_id","find","getPoliticalStance","lastElectYear","usElectionData","election","details","winner","getStanceColor","stance","BubbleLegend","fill","xmlns","cx","cy","r","d","stroke","strokeDasharray","LegendH3","h3","fullData","Map","data","pieChartData","democrat","republican","noData","id","getPieChartData","stateCenter","lats","longs","reduce","a","b","Card","CardContent","Grid","container","spacing","item","xs","direction","MapContainer","center","zoom","minZoom","maxZoom","TileLayer","attribution","url","victims","CircleMarker","fillColor","fillOpacity","radius","Math","log","Tooltip","className","marginTop","alignItems","margin","top","right","bottom","left","innerRadius","colors","datum","sortByValue","enableArcLabels","enableArcLinkLabels","activeOuterRadiusOffset","layers","dataWithArc","centerX","centerY","total","x","y","textAnchor","dominantBaseline","fontSize","fontWeight","legends","anchor","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemTextColor","itemDirection","itemOpacity","symbolSize","symbolShape","WordCloudLegend","synonyms","Party","Restaurant","Home","Club","School","Street","Church","Mall","rawData","Word_Cloud","words","text","addValue","txt","element","filterByVenue","Others","locations","counted","j","loc","toLowerCase","JSON","stringify","totalCount","acc","word","proportion","font","rotate","random","onWordClick","console","onWordMouseOver","onWordMouseOut","d3","remove","getRaceData","races","Race","Frequency","race","Demographics","raceData","indexBy","gridLabelOffset","weekdays","ParallelCoordinate","Date","getDay","locs","str","variables","type","values","padding","ticksPosition","legend","legendPosition","legendOffset","lineOpacity","theme","axis","domain","line","strokeWidth","Time_Range","App","useState","muiTheme","createTheme","palette","primary","main","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.76f2976c.chunk.js","sourcesContent":["import {\n  Box,\n  AppBar,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  Toolbar,\n  Typography,\n  Slider,\n} from \"@mui/material\";\nimport styled from \"@emotion/styled\";\n// import {} from \"\";\n\n// const states = ['Alabama','Alaska','American Samoa','Arizona','Arkansas','California','Colorado','Connecticut','Delaware','District of Columbia','Federated States of Micronesia','Florida','Georgia','Guam','Hawaii','Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine','Marshall Islands','Maryland','Massachusetts','Michigan','Minnesota','Mississippi','Missouri','Montana','Nebraska','Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina','North Dakota','Northern Mariana Islands','Ohio','Oklahoma','Oregon','Palau','Pennsylvania','Puerto Rico','Rhode Island','South Carolina','South Dakota','Tennessee','Texas','Utah','Vermont','Virgin Island','Virginia','Washington','West Virginia','Wisconsin','Wyoming'];\nconst states = [\n  \"Alabama\",\n  \"Alaska\",\n  \"Arizona\",\n  \"Arkansas\",\n  \"California\",\n  \"Colorado\",\n  \"Connecticut\",\n  \"Delaware\",\n  \"Florida\",\n  \"Georgia\",\n  \"Hawaii\",\n  \"Idaho\",\n  \"Illinois\",\n  \"Indiana\",\n  \"Iowa\",\n  \"Kansas\",\n  \"Kentucky\",\n  \"Louisiana\",\n  \"Maine\",\n  \"Maryland\",\n  \"Massachusetts\",\n  \"Michigan\",\n  \"Minnesota\",\n  \"Mississippi\",\n  \"Missouri\",\n  \"Montana\",\n  \"Nebraska\",\n  \"Nevada\",\n  \"New Hampshire\",\n  \"New Jersey\",\n  \"New Mexico\",\n  \"New York\",\n  \"North Carolina\",\n  \"North Dakota\",\n  \"Ohio\",\n  \"Oklahoma\",\n  \"Oregon\",\n  \"Pennsylvania\",\n  \"Rhode Island\",\n  \"South Carolina\",\n  \"South Dakota\",\n  \"Tennessee\",\n  \"Texas\",\n  \"Utah\",\n  \"Vermont\",\n  \"Virginia\",\n  \"Washington\",\n  \"West Virginia\",\n  \"Wisconsin\",\n  \"Wyoming\",\n];\n\nconst YearRangeLegend = styled.p`\n  font-size: 16px;\n  margin: 0 40px 0 0px;\n`;\n\nexport default function DropdownMenu(props) {\n  const handleSliderChange = (event, newYearRange) => {\n    props.setYearRange(newYearRange);\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"fixed\" style={{ height: 80, justifyContent: \"center\" }}>\n        <Toolbar>\n          <Typography\n            variant=\"h5\"\n            noWrap\n            component=\"div\"\n            flexGrow={0.8}\n            // sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}\n          >\n            US Mass Shooting Overview\n          </Typography>\n          {/* <h1>US Mass Shooting Overview</h1> */}\n          {/* Select Year Range */}\n          <YearRangeLegend>Year Range:</YearRangeLegend>\n          <Box sx={{ width: 300, flexGrow: 1, flexDirection: \"row\", paddingTop: 5 }}>\n            <Slider\n              min={1966}\n              max={2017}\n              value={props.yearRange}\n              onChange={handleSliderChange}\n              valueLabelDisplay=\"on\"\n              color=\"secondary\"\n              style={{ alignContent: \"baseline\", alignSelf: \"baseline\" }}\n            />\n          </Box>\n          {/* Select State */}\n          <Box\n            sx={{\n              width: 200,\n              flexGrow: 0,\n              flexDirection: \"row\",\n              paddingLeft: 10,\n              paddingRight: 10,\n            }}\n          >\n            <FormControl variant=\"filled\">\n              <InputLabel style={{ color: \"white\" }}>State</InputLabel>\n              <Select\n                style={{ color: \"white\", width: 200 }}\n                value={props.usState}\n                label=\"State\"\n                onChange={(e) => {\n                  props.setUsState(e.target.value);\n                }}\n              >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                {states.map((state) => (\n                  <MenuItem value={state.toUpperCase()}>{state}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Box>\n          {/* Button to reset all */}\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              props.setYearRange([1966, 2017]);\n              props.setUsState(\"\");\n            }}\n          >\n            Reset Filters\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\n","import massShootData from \"../data/mass_shootings.json\";\r\nimport usElectionData from \"../data/us_election.json\";\r\n\r\n/**\r\n * Filter mass shooting data by time range.\r\n * @param {object[]} shootingData Mass shooting data\r\n * @param {[number, number]} range Year range\r\n */\r\nexport function filterYearsState(shootingData, range = [1966, 2017], usState = \"\") {\r\n  const filteredData = [];\r\n  shootingData.forEach((shooting) => {\r\n    const year = parseInt(shooting[\"Date\"].slice(-4));\r\n    if (range[0] <= year && year <= range[1] && shooting.State.includes(usState)) {\r\n      filteredData.push(shooting);\r\n    }\r\n  });\r\n\r\n  return filteredData;\r\n}\r\n\r\n/**\r\n * Load a copy of the mass shooting JSON data with specified keys being kept/discarded.\r\n * @param {boolean} include If `true`, returned objects only has keys specified in `keys` parameter.\r\n * If `false`, returned objects has all original keys except the ones specified in `keys` parameter.\r\n * @param  {...string} keys List of object keys to be kept/removed from mass shooting JSON\r\n */\r\nexport function loadData(include = true, ...keys) {\r\n  for (let i = 0; i < keys.length; ++i) {\r\n    if (!keys.includes(keys[i])) {\r\n      keys.splice(i, 1);\r\n      --i;\r\n    }\r\n  }\r\n  if (keys.length === 0) return massShootData;\r\n  return massShootData.map((shooting) =>\r\n    Object.fromEntries(\r\n      Object.entries(shooting).filter(([key, value]) =>\r\n        include ? keys.includes(key) : !keys.includes(key)\r\n      )\r\n    )\r\n  );\r\n}\r\n\r\n/**\r\n * Get an object of a single shooting incident given its ID.\r\n * @param {number} S_id Shooting incident ID. Corresponds to `S#` key in mass shooting JSON.\r\n */\r\nexport function getShootingByID(S_id) {\r\n  return massShootData.find((shooting) => shooting[\"S#\"] === S_id);\r\n}\r\n","import usElectionData from \"../data/us_election.json\";\r\nimport { getShootingByID } from \".\";\r\n\r\n/**\r\n * Get the data for drawing a pie chart showing political stance.\r\n * @param {object[]} data Shooting data\r\n * @see {@link https://nivo.rocks/pie/}\r\n */\r\nexport function getPieChartData(data) {\r\n  let democrat = 0,\r\n    republican = 0,\r\n    noData = 0;\r\n\r\n  data.forEach((shooting) => {\r\n    const S_id = shooting[\"S#\"];\r\n    const stance = getPoliticalStance(S_id);\r\n    switch (stance) {\r\n      case \"DEMOCRAT\":\r\n        ++democrat;\r\n        break;\r\n      case \"REPUBLICAN\":\r\n        ++republican;\r\n        break;\r\n      default:\r\n        ++noData;\r\n        break;\r\n    }\r\n  });\r\n\r\n  return [\r\n    {\r\n      id: \"Democrat\",\r\n      label: \"Democrat\",\r\n      value: democrat,\r\n      color: \"#002387\",\r\n    },\r\n    {\r\n      id: \"Republican\",\r\n      label: \"Republican\",\r\n      value: republican,\r\n      color: \"#cc0000\",\r\n    },\r\n    {\r\n      id: \"No Data\",\r\n      label: \"No Data\",\r\n      value: noData,\r\n      color: \"#515151\",\r\n    },\r\n  ];\r\n}\r\n\r\n/**\r\n * Get the winning party of the state in the election as closest to the shooting incident given its ID.\r\n * @param {number} S_id Shooting incident ID\r\n * @returns {\"DEMOCRAT\"|\"REPUBLICAN\"|null}\r\n */\r\nexport function getPoliticalStance(S_id) {\r\n  const shooting = getShootingByID(S_id);\r\n  const year = parseInt(shooting[\"Date\"].slice(-4));\r\n  const lastElectYear = year - (year % 4);\r\n\r\n  // No election results before 1976\r\n  if (lastElectYear < 1976) {\r\n    return null;\r\n  }\r\n\r\n  const election = usElectionData.find((election) => election.year === lastElectYear);\r\n  const state = election.details.find((state) => state.state === shooting[\"State\"]);\r\n  return state.winner;\r\n}\r\n\r\n/**\r\n * Gets the color of the winning party in a state.\r\n * @param {\"DEMOCRAT\"|\"REPUBLICAN\"|null} stance Winning party of election\r\n * @returns\r\n */\r\nexport function getStanceColor(stance) {\r\n  switch (stance) {\r\n    case \"DEMOCRAT\":\r\n      return \"#002387\";\r\n    case \"REPUBLICAN\":\r\n      return \"#cc0000\";\r\n    default:\r\n      return \"#515151\";\r\n  }\r\n}\r\n","export default function BubbleLegend(props) {\r\n  return (\r\n    <svg width={92} height={50} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\r\n      <circle cx={25} cy={25} r={25} fill=\"#335E89\" />\r\n      <circle cx={25} cy={34} r={16} fill=\"#6F9CC9\" />\r\n      <circle cx={25} cy={42} r={8} fill=\"#CEE0F1\" />\r\n      <path d=\"M33 42h35M40 26h28\" stroke=\"#000\" strokeDasharray=\"2 2\" />\r\n      <path\r\n        d=\"M77.678 43.434c0 .41-.07.78-.211 1.113-.14.332-.342.617-.604.855-.257.239-.57.422-.937.551a3.678 3.678 0 01-1.225.194c-.781 0-1.361-.118-1.74-.352v-1.02c.57.368 1.154.551 1.752.551.305 0 .578-.045.82-.135.246-.09.455-.214.627-.375.172-.16.303-.353.393-.58.094-.226.14-.474.14-.744 0-.547-.183-.974-.55-1.283-.368-.313-.9-.469-1.6-.469a11.491 11.491 0 00-.733.024c-.124.004-.248.01-.369.017a6.28 6.28 0 00-.322.03l.287-4.213h3.885v.867h-3.053l-.17 2.467c.125-.008.258-.014.399-.018a6.76 6.76 0 01.375-.012c.445 0 .844.059 1.195.176.352.117.648.285.89.504.247.215.432.48.557.797.13.312.194.664.194 1.055zM76.523 23.8c0-.257-.04-.482-.123-.673a1.26 1.26 0 00-.328-.475 1.297 1.297 0 00-.486-.287 2.015 2.015 0 00-1.16-.018 2.75 2.75 0 00-.528.212c-.167.09-.332.197-.492.322a3.67 3.67 0 00-.44.416v-1.031c.27-.262.571-.461.903-.598.336-.14.744-.211 1.225-.211.344 0 .662.05.955.152.293.098.547.243.761.434.215.191.383.428.504.709.126.281.188.604.188.967 0 .332-.04.633-.117.902-.075.27-.19.524-.346.762a3.586 3.586 0 01-.58.685 8.26 8.26 0 01-.826.668c-.395.282-.72.522-.979.721-.254.2-.457.387-.61.563a1.653 1.653 0 00-.316.521 1.852 1.852 0 00-.087.598h4.183V30H72.64v-.416c0-.36.039-.676.117-.95.078-.273.207-.532.387-.779.18-.246.414-.492.703-.738.293-.246.65-.523 1.072-.832a6.54 6.54 0 00.762-.627c.207-.199.373-.398.498-.598.125-.199.213-.4.263-.603a2.56 2.56 0 00.082-.656zm8.075 3.634c0 .41-.07.78-.21 1.113-.142.332-.343.617-.605.855-.257.239-.57.422-.937.551a3.678 3.678 0 01-1.225.194c-.78 0-1.36-.118-1.74-.352v-1.02c.57.368 1.154.551 1.752.551.305 0 .578-.045.82-.135.247-.09.456-.214.627-.375.172-.16.303-.353.393-.58.094-.226.14-.474.14-.744 0-.547-.183-.974-.55-1.283-.367-.313-.9-.469-1.6-.469a11.485 11.485 0 00-.732.024c-.125.004-.248.01-.37.017a6.28 6.28 0 00-.322.03l.287-4.213h3.885v.867H81.16l-.17 2.467c.125-.008.257-.014.398-.018a6.76 6.76 0 01.375-.012c.445 0 .844.059 1.195.176.352.117.649.285.891.504.246.215.432.48.557.797.129.312.193.664.193 1.055zM75.242 13h-.96V5.74c-.075.074-.184.16-.329.258-.14.094-.3.188-.48.281a6.263 6.263 0 01-.563.264 3.979 3.979 0 01-.574.193v-.972c.21-.059.433-.137.668-.235a8.795 8.795 0 001.348-.72c.203-.137.379-.27.527-.399h.363V13zm7.202-6.2a1.7 1.7 0 00-.123-.673 1.26 1.26 0 00-.328-.475 1.296 1.296 0 00-.487-.287 2.016 2.016 0 00-1.16-.018c-.18.051-.355.122-.527.212-.168.09-.332.197-.493.322a3.675 3.675 0 00-.439.416V5.266c.27-.262.57-.461.902-.598.336-.14.745-.211 1.225-.211.344 0 .662.05.955.152.293.098.547.243.762.434.215.191.383.428.504.709.125.281.187.603.187.967 0 .332-.039.633-.117.902-.074.27-.19.524-.346.762a3.581 3.581 0 01-.58.685c-.234.22-.51.442-.826.668-.394.282-.72.522-.978.721-.254.2-.457.387-.61.563a1.652 1.652 0 00-.316.521 1.852 1.852 0 00-.088.598h4.183V13H78.56v-.416c0-.36.039-.676.117-.95.078-.273.207-.532.387-.779.18-.246.414-.492.703-.738.293-.246.65-.523 1.072-.832.305-.219.559-.428.762-.627.207-.199.373-.398.498-.597.125-.2.213-.4.264-.604.054-.207.082-.426.082-.656zm8.074 3.634c0 .41-.07.78-.21 1.113-.141.332-.343.617-.604.855-.258.239-.57.422-.938.551a3.678 3.678 0 01-1.224.194c-.782 0-1.362-.118-1.74-.352v-1.02c.57.368 1.154.551 1.751.551.305 0 .579-.045.82-.135.247-.09.456-.214.628-.375.171-.16.302-.353.392-.58.094-.226.14-.474.14-.744 0-.547-.183-.974-.55-1.283-.367-.313-.9-.469-1.6-.469a11.48 11.48 0 00-.732.024c-.125.004-.248.01-.37.017a6.144 6.144 0 00-.321.03l.287-4.213h3.885v.867h-3.053l-.17 2.467c.125-.008.258-.014.398-.018.14-.008.266-.012.375-.012.446 0 .844.059 1.196.176.351.117.648.285.89.504.246.215.432.48.557.797.129.312.193.664.193 1.055z\"\r\n        fill=\"#000\"\r\n      />\r\n      <path d=\"M45 9h23\" stroke=\"#000\" strokeDasharray=\"2 2\" />\r\n    </svg>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { ResponsivePie } from \"@nivo/pie\";\r\nimport { CircleMarker, MapContainer, TileLayer, Tooltip } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { filterYearsState, getShootingByID, loadData } from \"../../utils\";\r\nimport { getPieChartData, getPoliticalStance, getStanceColor } from \"../../utils/usMap\";\r\nimport BubbleLegend from \"./BubbleLegend\";\r\n\r\nconst LegendH3 = styled.h3`\r\n  text-align: center;\r\n  margin: 0;\r\n`;\r\n\r\nconst YearRangeLegend = styled.p`\r\n  font-size: 16px;\r\n  margin: 0 10px 0 0;\r\n`;\r\n\r\nconst fullData = loadData();\r\n\r\nexport default function Map({ yearRange, setYearRange, usState, setUsState }) {\r\n  const data = filterYearsState(fullData, yearRange, usState);\r\n  const pieChartData = getPieChartData(data);\r\n  // const [mapCenter, setMapCenter] = useState([38, -98]);\r\n  // const [mapZoom, setMapZoom] = useState(4);\r\n\r\n  const PieChartCenterText = ({ dataWithArc, centerX, centerY }) => {\r\n    let total = 0;\r\n    dataWithArc.forEach((datum) => {\r\n      total += datum.value;\r\n    });\r\n\r\n    return (\r\n      <text\r\n        x={centerX}\r\n        y={centerY}\r\n        textAnchor=\"middle\"\r\n        dominantBaseline=\"central\"\r\n        style={{\r\n          fontSize: \"20px\",\r\n          fontWeight: 600,\r\n        }}\r\n      >\r\n        {total}\r\n      </text>\r\n    );\r\n  };\r\n\r\n  const handleSliderChange = (event, newYearRange) => {\r\n    setYearRange(newYearRange);\r\n  };\r\n\r\n  // returns state coordinates by taking cluster mean of given coordinates by state\r\n  function stateCenter() {\r\n    if (usState === \"\") return [38, -98];\r\n\r\n    const lats = data.map((shooting) => shooting[\"Coordinates\"][0]);\r\n    const longs = data.map((shooting) => shooting[\"Coordinates\"][1]);\r\n    if (lats.length === 0) return [38, -98];\r\n\r\n    return [\r\n      lats.reduce((a, b) => a + b, 0) / lats.length,\r\n      longs.reduce((a, b) => a + b, 0) / longs.length,\r\n    ];\r\n  }\r\n  // const mapCenter = stateCenter();\r\n\r\n  return (\r\n    <Card variant=\"outlined\">\r\n      <CardContent>\r\n        <h2>Locations</h2>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={9} container direction=\"column\">\r\n            <Grid item style={{ height: 350 }}>\r\n              <MapContainer\r\n                style={{ height: 350 }}\r\n                center={stateCenter()}\r\n                zoom={\r\n                  usState === \"\" || (stateCenter()[0] === 38 && stateCenter()[1] === -98)\r\n                    ? 4\r\n                    : 5\r\n                }\r\n                minZoom={3}\r\n                maxZoom={12}\r\n              >\r\n                <TileLayer\r\n                  attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                  url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n                {data.map((shooting) => {\r\n                  const S_id = shooting[\"S#\"];\r\n                  const stance = getPoliticalStance(S_id);\r\n                  const victims = shooting[\"Total victims\"];\r\n                  return (\r\n                    <CircleMarker\r\n                      key={S_id}\r\n                      center={shooting[\"Coordinates\"]}\r\n                      stroke={false}\r\n                      fillColor={getStanceColor(stance)}\r\n                      fillOpacity={0.5}\r\n                      radius={5 * Math.log(victims)}\r\n                    >\r\n                      <Tooltip>\r\n                        <div className=\"map-tooltip\">\r\n                          <strong>{shooting[\"Title\"]}</strong>\r\n                          <p>Date: {shooting[\"Date\"]}</p>\r\n                          <p>Total victims: {shooting[\"Total victims\"]}</p>\r\n                          <p>\r\n                            Fatalities: {shooting[\"Fatalities\"]} ; Injured:{\" \"}\r\n                            {shooting[\"Injured\"]}\r\n                          </p>\r\n                        </div>\r\n                      </Tooltip>\r\n                    </CircleMarker>\r\n                  );\r\n                })}\r\n              </MapContainer>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              style={{ marginTop: 30 }}\r\n              container\r\n              direction=\"row\"\r\n              justifyContent=\"center\"\r\n              spacing={3}\r\n            >\r\n              {/* <Grid item>\r\n                <YearRangeLegend>Year Range:</YearRangeLegend>\r\n              </Grid>\r\n              <Grid item>\r\n                <Box sx={{ width: 300 }}>\r\n                  <Slider\r\n                    min={1966}\r\n                    max={2017}\r\n                    value={yearRange}\r\n                    onChange={handleSliderChange}\r\n                    valueLabelDisplay=\"on\"\r\n                  />\r\n                </Box>\r\n              </Grid> */}\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={3} container direction=\"column\" alignItems=\"center\" spacing={3}>\r\n            <Grid item style={{ height: 220 }}>\r\n              <LegendH3>Political Stance</LegendH3>\r\n              <ResponsivePie\r\n                data={pieChartData}\r\n                margin={{ top: 0, right: 20, bottom: 60, left: 20 }}\r\n                innerRadius={0.5}\r\n                colors={{ datum: \"data.color\" }}\r\n                sortByValue\r\n                enableArcLabels={false}\r\n                enableArcLinkLabels={false}\r\n                activeOuterRadiusOffset={2}\r\n                layers={[\"arcs\", \"arcLabels\", \"legends\", PieChartCenterText]}\r\n                legends={[\r\n                  {\r\n                    anchor: \"bottom\",\r\n                    direction: \"column\",\r\n                    justify: false,\r\n                    translateX: 0,\r\n                    translateY: 50,\r\n                    itemsSpacing: 0,\r\n                    itemWidth: 100,\r\n                    itemHeight: 18,\r\n                    itemTextColor: \"#000\",\r\n                    itemDirection: \"left-to-right\",\r\n                    itemOpacity: 1,\r\n                    symbolSize: 15,\r\n                    symbolShape: \"circle\",\r\n                  },\r\n                ]}\r\n              />\r\n            </Grid>\r\n            <Grid item style={{ marginTop: 30 }}>\r\n              <LegendH3>Total Victims</LegendH3>\r\n              <BubbleLegend style={{ marginTop: 15 }} />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","function WordCloudLegend(props) {\r\n  return (\r\n    <svg\r\n      width={218}\r\n      height={25}\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      {...props}\r\n    >\r\n      <path fill=\"#B41717\" d=\"M25 0h25v25H25z\" />\r\n      <path d=\"M0 5a5 5 0 015-5h20v25H5a5 5 0 01-5-5V5z\" fill=\"#6D0909\" />\r\n      <path fill=\"#D15151\" d=\"M50 0h25v25H50z\" />\r\n      <path d=\"M75 0h20a5 5 0 015 5v15a5 5 0 01-5 5H75V0z\" fill=\"#E27C7C\" />\r\n      <path\r\n        d=\"M124.188 18h-1.409l-5.045-7.813a3.296 3.296 0 01-.314-.616h-.041c.036.21.055.659.055 1.347V18h-1.149V8.197h1.49l4.909 7.69c.205.32.337.538.396.657h.027c-.045-.283-.068-.763-.068-1.442V8.197h1.149V18zm5.345.164c-1.034 0-1.861-.326-2.481-.978-.615-.656-.923-1.524-.923-2.604 0-1.176.321-2.094.964-2.755.642-.66 1.511-.991 2.604-.991 1.044 0 1.857.321 2.441.964.588.642.882 1.533.882 2.673 0 1.116-.317 2.012-.951 2.686-.629.67-1.474 1.005-2.536 1.005zm.082-6.385c-.72 0-1.289.246-1.709.739-.419.487-.629 1.162-.629 2.023 0 .83.212 1.483.636 1.962.424.478.991.718 1.702.718.725 0 1.281-.235 1.668-.704.392-.47.588-1.137.588-2.003 0-.875-.196-1.55-.588-2.024-.387-.474-.943-.71-1.668-.71zm5.585 6.371a.739.739 0 01-.54-.225.748.748 0 01-.219-.54c0-.21.073-.39.219-.54a.728.728 0 01.54-.233c.214 0 .397.078.547.233.15.15.226.33.226.54 0 .21-.076.39-.226.54a.745.745 0 01-.547.225zm9.413.014c-1.034 0-1.861-.326-2.481-.978-.615-.656-.923-1.524-.923-2.604 0-1.176.321-2.094.964-2.755.642-.66 1.511-.991 2.604-.991 1.044 0 1.857.321 2.441.964.588.642.882 1.533.882 2.673 0 1.116-.317 2.012-.951 2.686-.628.67-1.474 1.005-2.536 1.005zm.082-6.385c-.72 0-1.289.246-1.709.739-.419.487-.629 1.162-.629 2.023 0 .83.212 1.483.636 1.962.424.478.991.718 1.702.718.725 0 1.281-.235 1.668-.704.392-.47.588-1.137.588-2.003 0-.875-.196-1.55-.588-2.024-.387-.474-.943-.71-1.668-.71zm8.655-3.158a1.497 1.497 0 00-.746-.184c-.783 0-1.175.494-1.175 1.483V11h1.64v.957h-1.64V18h-1.115v-6.043h-1.196V11h1.196V9.865c0-.733.212-1.312.636-1.736.424-.428.953-.643 1.586-.643.342 0 .613.041.814.123v1.012zm4.347 9.126v-1.203a3.319 3.319 0 002.017.677c.984 0 1.476-.328 1.476-.985a.825.825 0 00-.129-.471 1.181 1.181 0 00-.342-.349c-.142-.1-.31-.19-.506-.267a20.245 20.245 0 00-.622-.252 8.85 8.85 0 01-.82-.37 2.68 2.68 0 01-.588-.423 1.685 1.685 0 01-.356-.54 1.959 1.959 0 01-.116-.705c0-.328.075-.617.226-.868.15-.255.35-.467.601-.636a2.77 2.77 0 01.855-.39c.323-.086.656-.13.998-.13.606 0 1.148.106 1.627.315v1.135c-.515-.337-1.108-.506-1.778-.506-.209 0-.399.025-.567.075a1.377 1.377 0 00-.438.199.97.97 0 00-.28.314.82.82 0 00-.096.397c0 .182.032.335.096.458.068.123.166.232.294.328.128.095.283.182.465.26.182.077.39.161.622.252.31.119.588.242.834.37.246.123.456.264.629.423.173.155.305.335.396.54.096.206.144.45.144.732 0 .346-.078.647-.233.902-.15.256-.353.467-.608.636a2.795 2.795 0 01-.882.376 4.35 4.35 0 01-1.046.123c-.72 0-1.344-.139-1.873-.417zm12.182.253h-1.121v-4.033c0-1.459-.543-2.188-1.627-2.188-.547 0-1.007.212-1.381.636-.374.42-.561.96-.561 1.62V18h-1.121V7.637h1.121v4.525h.028c.538-.884 1.303-1.326 2.297-1.326 1.576 0 2.365.95 2.365 2.85V18zm5.045.164c-1.035 0-1.862-.326-2.482-.978-.615-.656-.922-1.524-.922-2.604 0-1.176.321-2.094.963-2.755.643-.66 1.511-.991 2.605-.991 1.044 0 1.857.321 2.44.964.588.642.882 1.533.882 2.673 0 1.116-.317 2.012-.95 2.686-.629.67-1.474 1.005-2.536 1.005zm.082-6.385c-.72 0-1.29.246-1.709.739-.419.487-.629 1.162-.629 2.023 0 .83.212 1.483.636 1.962.424.478.991.718 1.702.718.724 0 1.28-.235 1.668-.704.392-.47.588-1.137.588-2.003 0-.875-.196-1.55-.588-2.024-.388-.474-.944-.71-1.668-.71zm8.121 6.385c-1.035 0-1.862-.326-2.481-.978-.616-.656-.923-1.524-.923-2.604 0-1.176.321-2.094.964-2.755.642-.66 1.51-.991 2.604-.991 1.044 0 1.857.321 2.44.964.588.642.882 1.533.882 2.673 0 1.116-.316 2.012-.95 2.686-.629.67-1.474 1.005-2.536 1.005zm.082-6.385c-.72 0-1.29.246-1.709.739-.419.487-.629 1.162-.629 2.023 0 .83.212 1.483.636 1.962.424.478.991.718 1.702.718.725 0 1.281-.235 1.668-.704.392-.47.588-1.137.588-2.003 0-.875-.196-1.55-.588-2.024-.387-.474-.943-.71-1.668-.71zm8.442 6.153c-.264.146-.613.218-1.046.218-1.225 0-1.838-.683-1.838-2.05v-4.143h-1.204V11h1.204V9.291l1.121-.362V11h1.763v.957h-1.763v3.944c0 .47.079.805.239 1.005.159.2.424.301.793.301.282 0 .526-.077.731-.232v.957zm2.072-8.71a.71.71 0 01-.725-.724c0-.21.071-.383.212-.52a.698.698 0 01.513-.211c.205 0 .378.07.519.212.146.136.219.31.219.519 0 .2-.073.371-.219.513a.705.705 0 01-.519.212zM194.27 18h-1.122v-7h1.122v7zm8.08 0h-1.121v-3.992c0-1.486-.543-2.229-1.627-2.229-.561 0-1.026.212-1.395.636-.365.42-.547.95-.547 1.593V18h-1.121v-7h1.121v1.162h.028c.528-.884 1.294-1.326 2.296-1.326.766 0 1.352.248 1.757.745.406.492.609 1.206.609 2.14V18zm8.093-.56c0 2.57-1.23 3.855-3.691 3.855-.866 0-1.622-.164-2.27-.492v-1.121c.789.437 1.541.656 2.256.656 1.723 0 2.584-.916 2.584-2.748v-.766h-.027c-.533.893-1.335 1.34-2.406 1.34-.871 0-1.573-.31-2.106-.93-.528-.624-.793-1.46-.793-2.508 0-1.19.285-2.136.855-2.837.574-.702 1.358-1.053 2.351-1.053.944 0 1.643.378 2.099 1.135h.027V11h1.121v6.44zm-1.121-2.605v-1.032c0-.556-.189-1.033-.567-1.429a1.846 1.846 0 00-1.401-.595c-.693 0-1.236.253-1.627.76-.392.5-.588 1.204-.588 2.111 0 .78.187 1.404.56 1.873.378.465.877.698 1.497.698.629 0 1.14-.224 1.532-.67.396-.447.594-1.019.594-1.716zm2.967 2.912v-1.203a3.319 3.319 0 002.017.677c.984 0 1.476-.328 1.476-.985a.818.818 0 00-.13-.471 1.19 1.19 0 00-.341-.349c-.142-.1-.31-.19-.506-.267a20.245 20.245 0 00-.622-.252 9 9 0 01-.821-.37 2.73 2.73 0 01-.588-.423 1.682 1.682 0 01-.355-.54 1.937 1.937 0 01-.116-.705c0-.328.075-.617.225-.868.151-.255.351-.467.602-.636.251-.173.535-.303.854-.39a3.85 3.85 0 01.998-.13c.607 0 1.149.106 1.627.315v1.135c-.515-.337-1.107-.506-1.777-.506-.21 0-.399.025-.567.075a1.377 1.377 0 00-.438.199.97.97 0 00-.28.314.82.82 0 00-.096.397c0 .182.032.335.096.458.068.123.166.232.294.328.127.095.282.182.465.26.182.077.389.161.622.252.31.119.588.242.834.37.246.123.455.264.629.423.173.155.305.335.396.54.096.206.144.45.144.732 0 .346-.078.647-.233.902-.15.256-.353.467-.608.636a2.795 2.795 0 01-.882.376 4.356 4.356 0 01-1.046.123c-.72 0-1.344-.139-1.873-.417z\"\r\n        fill=\"#000\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default WordCloudLegend;\r\n","import { Card, CardContent } from \"@mui/material\";\r\nimport * as d3 from \"d3\";\r\nimport WordCloud from \"react-d3-cloud\";\r\nimport { loadData, filterYearsState } from \"../../utils\";\r\nimport WordCloudLegend from \"./WordCloudLegend\";\r\n\r\nconst synonyms = {\r\n  Party: [\"party\"],\r\n  Restaurant: [\"restaurant\", \"cafeteria\", \"cafe\", \"coffee shop\"],\r\n  Home: [\r\n    \"home\",\r\n    \"house\",\r\n    \"family\",\r\n    \"mother\",\r\n    \"father\",\r\n    \"child\",\r\n    \"son\",\r\n    \"daughter\",\r\n    \"apartment\",\r\n  ],\r\n  \"Drive-by\": [\"drive-by\", \"drive by\"],\r\n  Club: [\"club\", \"bar\", \"pub\"],\r\n  School: [\"school\", \"teacher\", \"student\", \"university\", \"college\"],\r\n  Street: [\"street\", \"sidewalk\", \"roadside\"],\r\n  \"Gas station\": [\"gas station\"],\r\n  \"Post office\": [\"post office\"],\r\n  Church: [\"church\", \"temple\", \"mosque\"],\r\n  Mall: [\"mall\", \"shopping\", \"macy's\", \"plaza\"],\r\n  \"Public facilities\": [\r\n    \"public facilities\",\r\n    \"city hall\",\r\n    \"army\",\r\n    \"government\",\r\n    \"township\",\r\n    \"navy\",\r\n    \"train\",\r\n    \"airport\",\r\n  ],\r\n};\r\n\r\nconst rawData = loadData(\r\n  true,\r\n  \"S#\",\r\n  \"Title\",\r\n  \"Date\",\r\n  \"State\",\r\n  \"Incident Area\",\r\n  \"Summary\",\r\n  \"NER\"\r\n);\r\n\r\nfunction handleMouseOut(d) {\r\n  d3.select(\"#story-titles\").remove();\r\n}\r\n\r\nfunction getWordColor(proportion) {\r\n  if (proportion >= 0.3) {\r\n    return \"#6D0909\";\r\n  } else if (proportion >= 0.2) {\r\n    return \"#B41717\";\r\n  } else if (proportion >= 0.02) {\r\n    return \"#D15151\";\r\n  } else {\r\n    return \"#E27C7C\";\r\n  }\r\n}\r\n\r\nexport default function Word_Cloud(props) {\r\n  const words = [\r\n    { text: \"Party\", value: 0 },\r\n    { text: \"Restaurant\", value: 0 },\r\n    { text: \"Home\", value: 0 },\r\n    { text: \"Drive-by\", value: 0 },\r\n    { text: \"Club\", value: 0 },\r\n    { text: \"School\", value: 0 },\r\n    { text: \"Street\", value: 0 },\r\n    { text: \"Gas station\", value: 0 },\r\n    { text: \"Post office\", value: 0 },\r\n    { text: \"Church\", value: 0 },\r\n    { text: \"Mall\", value: 0 },\r\n    { text: \"Public facilities\", value: 0 },\r\n    { text: \"Others\", value: 0 },\r\n  ];\r\n\r\n  function handleMouseClick(d) {}\r\n\r\n  // function handleMouseOver(d) {\r\n  //   var group = focus.append('g')\r\n  //                    .attr('id', 'story-titles');\r\n  //    var base = d.y - d.size;\r\n\r\n  //   d3.selectAll('text')\r\n  //        .data(data['sample_title'][d.key])\r\n  //        .enter().append('text')\r\n  //        .attr('x', d.x)\r\n  //        .attr('y', function(title, i) {\r\n  //          return (base - i*14);\r\n  //        })\r\n  //        .attr('text-anchor', 'middle')\r\n  //        .text(function(title) { return title; });\r\n\r\n  //   var bbox = group.node().getBBox();\r\n  //   var bboxPadding = 5;\r\n\r\n  //   // place a white background to see text more clearly\r\n  //   var rect = group.insert('rect', ':first-child')\r\n  //                 .attr('x', bbox.x)\r\n  //                 .attr('y', bbox.y)\r\n  //                 .attr('width', bbox.width + bboxPadding)\r\n  //                 .attr('height', bbox.height + bboxPadding)\r\n  //                 .attr('rx', 10)\r\n  //                 .attr('ry', 10)\r\n  //                 .attr('class', 'label-background-strong');\r\n  // }\r\n\r\n  function addValue(txt) {\r\n    const element = words.find((item) => item.text === txt);\r\n    element.value = element.value + 1;\r\n  }\r\n\r\n  const filterByVenue = {\r\n    Party: [],\r\n    Restaurant: [],\r\n    Home: [],\r\n    \"Drive-by\": [],\r\n    Club: [],\r\n    School: [],\r\n    Street: [],\r\n    \"Gas station\": [],\r\n    \"Post office\": [],\r\n    Church: [],\r\n    Mall: [],\r\n    \"Public facilities\": [],\r\n    Others: [],\r\n  };\r\n\r\n  // calculate word cloud text size\r\n  const filteredData = filterYearsState(rawData, props.yearRange, props.usState);\r\n  const locations = Object.keys(synonyms);\r\n  for (let i in filteredData) {\r\n    let counted = false;\r\n    const shooting = filteredData[i];\r\n    for (let j in locations) {\r\n      const loc = locations[j];\r\n      if (\r\n        synonyms[loc]\r\n          .map((item) => shooting[\"Title\"].toLowerCase().includes(item))\r\n          .includes(true) ||\r\n        synonyms[loc]\r\n          .map((item) =>\r\n            shooting[\"Incident Area\"]\r\n              ? shooting[\"Incident Area\"].toLowerCase().includes(item)\r\n              : false\r\n          )\r\n          .includes(true) ||\r\n        synonyms[loc]\r\n          .map((item) => shooting[\"Summary\"].toLowerCase().includes(item))\r\n          .includes(true) ||\r\n        synonyms[loc]\r\n          .map((item) =>\r\n            shooting[\"NER\"]\r\n              ? JSON.stringify(shooting[\"NER\"]).toLowerCase().includes(item)\r\n              : false\r\n          )\r\n          .includes(true)\r\n      ) {\r\n        addValue(loc);\r\n        counted = true;\r\n        filterByVenue[loc].push(shooting[\"S#\"]);\r\n      }\r\n    }\r\n    if (!counted) {\r\n      addValue(\"Others\");\r\n      filterByVenue[\"Others\"].push(shooting[\"S#\"]);\r\n      continue;\r\n    }\r\n  }\r\n\r\n  // Calculate the proportion\r\n  const totalCount = words.reduce((acc, word) => (acc += word.value), 0);\r\n  words.forEach((word) => {\r\n    // Add new property called `proportion`\r\n    word.proportion = word.value / totalCount;\r\n  });\r\n\r\n  // console.log(\"words\", words);\r\n  // console.log(\"filterByVenue\", filterByVenue);\r\n\r\n  return (\r\n    <Card style={props.style} variant=\"outlined\">\r\n      <CardContent>\r\n        <h2>Places of Shooting</h2>\r\n        <WordCloud\r\n          data={words}\r\n          width={300}\r\n          height={100}\r\n          font=\"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto'\"\r\n          fontSize={(word) => (word.value === 0 ? 0 : 10 + word.proportion * 100)}\r\n          fill={(word) => getWordColor(word.proportion)}\r\n          rotate={0}\r\n          random={() => 1}\r\n          onWordClick={(event, d) => {\r\n            // set global state\r\n            console.log(`onWordClick: ${d.text}`);\r\n            handleMouseClick(d);\r\n          }}\r\n          onWordMouseOver={(event, d) => {\r\n            // display number\r\n            console.log(`onWordMouseOver: ${d.text}, ${d.value}`);\r\n            // handleMouseOver(d);\r\n          }}\r\n          onWordMouseOut={(event, d) => {\r\n            handleMouseOut(d);\r\n          }}\r\n        />\r\n        <WordCloudLegend style={{ margin: \"15px 0 0 5px\" }} />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","/**\r\n * Get data about race of shooters. Used to generate a radar graph.\r\n * @param {object[]} data Shooting data\r\n * @see {@link https://nivo.rocks/radar/}\r\n */\r\nexport function getRaceData(data) {\r\n  const races = [\r\n    { Race: \"White\", Frequency: 0 },\r\n    { Race: \"Black\", Frequency: 0 },\r\n    { Race: \"Asian\", Frequency: 0 },\r\n    { Race: \"Other\", Frequency: 0 },\r\n  ];\r\n\r\n  const raceList = data\r\n    .map((item) => item[\"Race_encoded\"])\r\n    .filter((item) => item !== null);\r\n\r\n  raceList.forEach((race) => {\r\n    const raceObj = races.find((r) => r.Race === race);\r\n    ++raceObj.Frequency;\r\n  });\r\n\r\n  return races;\r\n}\r\n","import { Card, CardContent, Grid } from \"@mui/material\";\r\nimport { ResponsiveRadar } from \"@nivo/radar\";\r\nimport { filterYearsState, loadData } from \"../../utils\";\r\nimport { getRaceData } from \"../../utils/demographics\";\r\n\r\nconst rawData = loadData(true, \"S#\", \"Date\", \"State\", \"Gender\", \"Race_encoded\", \"Age\");\r\n\r\nexport default function Demographics({ yearRange, usState }) {\r\n  const data = filterYearsState(rawData, yearRange, usState);\r\n  const raceData = getRaceData(data);\r\n\r\n  // const age_list = data\r\n  //   .map((item) => item.Age)\r\n  //   .filter((item) => item !== null && item !== NaN);\r\n  // let age_classif = age_list.map((item) => (item.includes(\",\") ? item.split(\",\") : item));\r\n  // const age = {};\r\n  // for (let i = 0; i < age_classif.length; i++) {\r\n  //   const a = Array.isArray(age_classif[i]) ? age_classif[i] : [age_classif[i]];\r\n  //   a.forEach((element) => {\r\n  //     age[element - (element % 5)] = 1 + (age[element - (element % 5)] || 0);\r\n  //   });\r\n  // }\r\n  // const _age = [];\r\n  // for (let [key, value] of Object.entries(age)) {\r\n  //   _age.push({ age: key, freq: value });\r\n  // }\r\n  // console.log(\"age\", _age);\r\n\r\n  return (\r\n    <Card variant=\"outlined\">\r\n      <CardContent>\r\n        <h2>Demographics</h2>\r\n        <Grid container direction=\"row\" spacing={1}>\r\n          <Grid item xs={6} style={{ height: 200 }}>\r\n            <ResponsiveRadar\r\n              data={raceData}\r\n              keys={[\"Frequency\"]}\r\n              indexBy=\"Race\"\r\n              margin={{ top: 20, right: 30, bottom: 20, left: 30 }}\r\n              colors=\"#850d0d\"\r\n              gridLabelOffset={14}\r\n            />\r\n          </Grid>\r\n          <Grid item></Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import { Card, CardContent, Grid } from \"@mui/material\";\nimport { ResponsiveParallelCoordinates } from \"@nivo/parallel-coordinates\";\nimport { filterYearsState, loadData, getShootingByID } from \"../../utils\";\nimport { getPoliticalStance, getStanceColor } from \"../../utils/usMap\";\n\nconst rawData = loadData(\n  true,\n  \"S#\",\n  \"Date\",\n  \"State\",\n  \"Gender\",\n  \"Race_encoded\",\n  \"Age\",\n  \"Fatalities\",\n  \"Injured\",\n  \"Total victims\",\n  \"Mental Health Issues\"\n);\nconst weekdays = [\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n  \"Sunday\",\n];\nconst synonyms = {\n  Church: [\"church\", \"temple\", \"mosque\"],\n  Party: [\"party\"],\n  // Restaurant: [\"restaurant\", \"cafeteria\", \"cafe\", \"coffee shop\"],\n  Home: [\n    \"home\",\n    \"house\",\n    \"family\",\n    \"mother\",\n    \"father\",\n    \"child\",\n    \"son\",\n    \"daughter\",\n    \"apartment\",\n  ],\n  // \"Drive-by\": [\"drive-by\", \"drive by\"],\n  Club: [\"club\", \"bar\", \"pub\"],\n  School: [\"school\", \"teacher\", \"student\", \"university\", \"college\"],\n  // Street: [\"street\", \"sidewalk\", \"roadside\"],\n  // \"Gas station\": [\"gas station\"],\n  // \"Post office\": [\"post office\"],\n  // Mall: [\"mall\", \"shopping\", \"macy's\", \"plaza\"],\n  \"Public facilities\": [\n    \"public facilities\",\n    \"city hall\",\n    \"army\",\n    \"government\",\n    \"township\",\n    \"navy\",\n    \"train\",\n    \"airport\",\n  ],\n};\n\nexport default function ParallelCoordinate({ yearRange, usState }) {\n  const data = filterYearsState(rawData, yearRange, usState);\n  data.map((shooting) => {\n    const d = new Date(shooting[\"Date\"]);\n    shooting[\"Weekday\"] = weekdays[(d.getDay() + 6) % 7];\n  });\n  //   weekdays.unshift(weekdays.pop());\n\n  data.map((item) => {\n    const shooting = getShootingByID(item[\"S#\"]);\n    const locs = Object.keys(synonyms);\n    const str = (\n      shooting[\"Title\"] +\n      shooting[\"Summary\"] +\n      shooting[\"Incident Area\"] +\n      JSON.stringify(shooting[\"NER\"])\n    ).toLowerCase();\n    locs.forEach((element) => {\n      for (let i in synonyms[element]) {\n        if (!Object.keys(item).includes(\"Venue\") && str.includes(synonyms[element][i])) {\n          item[\"Venue\"] = element;\n          break;\n        }\n      }\n    });\n  });\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent>\n        <h2>Parallel Coordinates</h2>\n        <Grid container direction=\"row\" spacing={1}>\n          <Grid item xs={12} style={{ height: 600 }}>\n            <ResponsiveParallelCoordinates\n              data={data}\n              variables={[\n                {\n                  key: \"Race_encoded\",\n                  type: \"point\",\n                  values: [\"Other\", \"Black\", \"Asian\", \"White\"],\n                  padding: 0.3,\n                  ticksPosition: \"before\",\n                  legend: \"Race_encoded\",\n                  legendPosition: \"start\",\n                  legendOffset: 20,\n                },\n                // {\n                //     key: 'Total victims',\n                //     type: 'linear',\n                //     min: 0,\n                //     max: 50,\n                //     legend: 'Total victims',\n                //     legendPosition: 'start',\n                //     legendOffset: -20\n                // },\n                {\n                  key: \"Weekday\",\n                  type: \"point\",\n                  values: weekdays,\n                  ticksPosition: \"after\",\n                  legend: \"Weekday\",\n                  legendPosition: \"start\",\n                  legendOffset: 20,\n                },\n                {\n                  key: \"Venue\",\n                  type: \"point\",\n                  value: Object.keys(synonyms),\n                  legend: \"Venue\",\n                  legendPosition: \"start\",\n                  legendOffset: -20,\n                },\n                {\n                  key: \"Fatalities\",\n                  type: \"linear\",\n                  min: 0,\n                  max: 40,\n                  legend: \"Fatalities\",\n                  legendPosition: \"start\",\n                  legendOffset: -20,\n                },\n                // {\n                //     key: 'Age',\n                //     type: 'linear',\n                //     min: 0,\n                //     max: 'auto',\n                //     legend: 'Age',\n                //     legendPosition: 'start',\n                //     legendOffset: -20,\n                //     ticksPosition: 'start',\n                // },\n              ]}\n              margin={{ top: 20, right: 70, bottom: 20, left: 60 }}\n              colors={(item) => {\n                return getStanceColor(getPoliticalStance(item[\"S#\"]));\n              }}\n              lineOpacity={0.04}\n              theme={{\n                axis: {\n                  domain: {\n                    line: {\n                      stroke: \"#777777\",\n                      strokeWidth: 2,\n                    },\n                  },\n                  // \"ticks\": {\n                  //     \"line\": {\n                  //         \"stroke\": \"#777777\",\n                  //         \"strokeWidth\": 1\n                  //     }\n                  // }\n                },\n                // \"grid\": {\n                //     \"line\": {\n                //         \"stroke\": \"#dddddd\",\n                //         \"strokeWidth\": 1\n                //     }\n                // }\n              }}\n            />\n          </Grid>\n          <Grid item></Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n}\n","import { Card, CardContent, Grid } from \"@mui/material\";\nimport { ResponsiveTimeRange } from \"@nivo/calendar\";\nimport { filterYearsState, loadData } from \"../../utils\";\nimport { getRaceData } from \"../../utils/demographics\";\n\nconst rawData = loadData(true, \"S#\", \"Date\", \"State\", \"Gender\", \"Race_encoded\", \"Age\");\n\nexport default function Time_Range({ yearRange, usState }) {\n  const data = filterYearsState(rawData, yearRange, usState);\n  const raceData = getRaceData(data);\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent>\n        <h2>Time Range</h2>\n        <Grid container direction=\"row\" spacing={1}>\n          <Grid item xs={6} style={{ height: 200 }}>\n            {/* <ResponsiveTimeRange\n                            data={data}\n                            from=\"2018-04-01\"\n                            to=\"2018-08-12\"\n                            emptyColor=\"#eeeeee\"\n                            colors={[ '#61cdbb', '#97e3d5', '#e8c1a0', '#f47560' ]}\n                            margin={{ top: 40, right: 40, bottom: 100, left: 40 }}\n                            dayBorderWidth={2}\n                            dayBorderColor=\"#ffffff\"\n                            legends={[\n                                {\n                                    anchor: 'bottom-right',\n                                    direction: 'row',\n                                    justify: false,\n                                    itemCount: 4,\n                                    itemWidth: 42,\n                                    itemHeight: 36,\n                                    itemsSpacing: 14,\n                                    itemDirection: 'right-to-left',\n                                    translateX: -60,\n                                    translateY: -60,\n                                    symbolSize: 20\n                                }\n                            ]}\n                        /> */}\n          </Grid>\n          <Grid item></Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n}\n","import { useState } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport DropdownMenu from \"./components/dropdownmenu/DropdownMenu\";\r\nimport Map from \"./components/map/Map\";\r\nimport Word_Cloud from \"./components/wordcloud/Word_Cloud\";\r\n// import Demographics from \"./components/demographics/Demographics\";\r\nimport Demographics2 from \"./components/demographics/Demographics2\";\r\nimport ParallelCoordinate from \"./components/parallelcoordinate/ParallelCoordinate\";\r\nimport Time_Range from \"./components/timerange/Time_Range\";\r\n\r\nfunction App() {\r\n  const [yearRange, setYearRange] = useState([1966, 2017]);\r\n  const [usState, setUsState] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      {/* <h1>US Mass Shooting Overview</h1> */}\r\n      <DropdownMenu\r\n        yearRange={yearRange}\r\n        setYearRange={setYearRange}\r\n        usState={usState}\r\n        setUsState={setUsState}\r\n      />\r\n      <Grid container spacing={2} style={{ paddingTop: 80 }}>\r\n        <Grid item xs={7} container direction=\"column\" spacing={2}>\r\n          <Grid item>\r\n            <Map yearRange={yearRange} usState={usState} />\r\n          </Grid>\r\n          <Grid item>\r\n            <ParallelCoordinate yearRange={yearRange} usState={usState} />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={5} container direction=\"column\" spacing={2}>\r\n          <Grid item>\r\n            <Word_Cloud yearRange={yearRange} usState={usState} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Demographics2 yearRange={yearRange} usState={usState} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Time_Range yearRange={yearRange} usState={usState} />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createTheme } from \"@mui/material/styles\";\r\n\r\n// See https://mui.com/customization/theming/\r\n\r\nconst muiTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#850D0D\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default muiTheme;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { ThemeProvider } from \"@mui/material/styles\";\r\nimport muiTheme from \"./theme/muiTheme\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={muiTheme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}